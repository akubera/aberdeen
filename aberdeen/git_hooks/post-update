#!/usr/bin/env python3
#
# post-update
#
# The 'post-update' git hook for an aberdeen blog repo
#
"""
To use this, copy this file into the 'hooks' directory in your server's git
repository. Also, add a configuration file to tell aberdeen where to send
the generated blog posts.
"""

import sys, os

from configparser import ConfigParser

# expect configuration to be in same directory
config = ConfigParser()
config.read(["aberdeen.cfg"])

cfg_aberdeen = config["aberdeen"]
cfg_database = config["database"]

if 'venv' in cfg_aberdeen:
    p = os.path.join(cfg_aberdeen['venv'], 'lib', 'python3.4', 'site-packages')
    sys.path.insert(1, p)

import aberdeen as ab


git = ab.call_git
#print("===post-update===")
#print ("Args:", sys.argv)

for ref_name in sys.argv[1:]:
    branch = git(['rev-parse', '--symbolic', '--abbrev-ref', ref_name]).strip()

    if branch == cfg_aberdeen['publish_branch']:
        # filenames = ab.call_git('ls-tree --full-tree --name-only -r publish')
        ls_tree_cmd = 'ls-tree --full-name -r %s' % (branch)
        all_files = ab.call_git(ls_tree_cmd).strip()
        files = [
            {'name': line.split()[3], 'blob': line.split()[2]}
            for line in all_files.split('\n')
        ]
        markdown_suffix = ['.md','.markdown']
        html_suffix = ['.html','.htm']
        posts = []
        for file in files:
            filename = file['name']
            blob_id = file['blob']
            # if any([filename.endswith(md) for md in markdown_suffix]):
            if any(map(filename.endswith, markdown_suffix)):
                contents = ab.call_git(['cat-file', 'blob', blob_id])
                posts.append(ab.generate_from_markdown(contents))
            elif any(map(filename.endswith, html_suffix)):
                pass

        print ("[post-update] Generated %d posts" % (len(posts)))
        ab.upload_posts_to_database(posts, cfg_database)
        print ("[post-update] :-) Successfully uploaded posts to database ‚ùÅ")
